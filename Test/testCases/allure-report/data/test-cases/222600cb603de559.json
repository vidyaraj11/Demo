{"uid":"222600cb603de559","name":"test_parallelSessionTextOn_pricingPage","fullName":"test_PricingPage.TestPricingPage#test_parallelSessionTextOn_pricingPage","historyId":"6a7d41d9dfe7c6ce1c1106d0e2f9467c","time":{"start":1665389692884,"stop":1665389698132,"duration":5248},"status":"broken","statusMessage":"http.client.RemoteDisconnected: Remote end closed connection without response","statusTrace":"self = <Test.testCases.test_PricingPage.TestPricingPage object at 0x0000016A6CA25340>\nsetup = None\n\n    @pytest.mark.scenario\n    #3 validate parallel session text on pricing page\n    def test_parallelSessionTextOn_pricingPage(self, setup):\n        self.logger.info(\"********** successfully signin *********\")\n        self.logger.info(\"**** routed on organisation list page*********\")\n        self.cb = organisationList(self.driver)\n>       self.cb.clickOnCreate()\n\ntest_PricingPage.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pageObjects\\organisationListPage.py:42: in clickOnCreate\n    self.driver.find_element_by_xpath(self.create_button_xpath).click()\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:365: in find_element_by_xpath\n    return self.find_element(by=By.XPATH, value=xpath)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:841: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:306: in execute\n    response = self.command_executor.execute(driver_command, params)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:464: in execute\n    return self._request(command_info[0], url, body=data)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:526: in _request\n    resp = opener.open(request, timeout=self._timeout)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:525: in open\n    response = self._open(req, data)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:542: in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:502: in _call_chain\n    result = func(*args)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:1360: in https_open\n    return self.do_open(http.client.HTTPSConnection, req,\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:1321: in do_open\n    r = h.getresponse()\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py:1322: in getresponse\n    response.begin()\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py:303: in begin\n    version, status, reason = self._read_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <http.client.HTTPResponse object at 0x0000016A6CAE9EE0>\n\n    def _read_status(self):\n        line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n        if len(line) > _MAXLINE:\n            raise LineTooLong(\"status line\")\n        if self.debuglevel > 0:\n            print(\"reply:\", repr(line))\n        if not line:\n            # Presumably, the server closed the connection before\n            # sending a valid response.\n>           raise RemoteDisconnected(\"Remote end closed connection without\"\n                                     \" response\")\nE           http.client.RemoteDisconnected: Remote end closed connection without response\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py:272: RemoteDisconnected","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1665389555956,"stop":1665389692879,"duration":136923},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"http.client.RemoteDisconnected: Remote end closed connection without response","statusTrace":"self = <Test.testCases.test_PricingPage.TestPricingPage object at 0x0000016A6CA25340>\nsetup = None\n\n    @pytest.mark.scenario\n    #3 validate parallel session text on pricing page\n    def test_parallelSessionTextOn_pricingPage(self, setup):\n        self.logger.info(\"********** successfully signin *********\")\n        self.logger.info(\"**** routed on organisation list page*********\")\n        self.cb = organisationList(self.driver)\n>       self.cb.clickOnCreate()\n\ntest_PricingPage.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pageObjects\\organisationListPage.py:42: in clickOnCreate\n    self.driver.find_element_by_xpath(self.create_button_xpath).click()\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:365: in find_element_by_xpath\n    return self.find_element(by=By.XPATH, value=xpath)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:841: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:306: in execute\n    response = self.command_executor.execute(driver_command, params)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:464: in execute\n    return self._request(command_info[0], url, body=data)\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:526: in _request\n    resp = opener.open(request, timeout=self._timeout)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:525: in open\n    response = self._open(req, data)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:542: in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:502: in _call_chain\n    result = func(*args)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:1360: in https_open\n    return self.do_open(http.client.HTTPSConnection, req,\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py:1321: in do_open\n    r = h.getresponse()\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py:1322: in getresponse\n    response.begin()\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py:303: in begin\n    version, status, reason = self._read_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <http.client.HTTPResponse object at 0x0000016A6CAE9EE0>\n\n    def _read_status(self):\n        line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n        if len(line) > _MAXLINE:\n            raise LineTooLong(\"status line\")\n        if self.debuglevel > 0:\n            print(\"reply:\", repr(line))\n        if not line:\n            # Presumably, the server closed the connection before\n            # sending a valid response.\n>           raise RemoteDisconnected(\"Remote end closed connection without\"\n                                     \" response\")\nE           http.client.RemoteDisconnected: Remote end closed connection without response\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py:272: RemoteDisconnected","steps":[],"attachments":[{"uid":"1ec41fff5d3a94ac","name":"log","source":"1ec41fff5d3a94ac.txt","type":"text/plain","size":179}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"setup::0","time":{"start":1665389700730,"stop":1665389707966,"duration":7236},"status":"broken","statusMessage":"http.client.RemoteDisconnected: Remote end closed connection without response\n","statusTrace":"  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 209, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 899, in _teardown_yield_fixture\n    next(it)\n  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\Test\\testCases\\test_PricingPage.py\", line 45, in setup\n    self.driver.quit()\n  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 603, in quit\n    self.execute(Command.QUIT)\n  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 306, in execute\n    response = self.command_executor.execute(driver_command, params)\n  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 464, in execute\n    return self._request(command_info[0], url, body=data)\n  File \"C:\\Users\\Vidya raj\\PycharmProjects\\framework\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 526, in _request\n    resp = opener.open(request, timeout=self._timeout)\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py\", line 525, in open\n    response = self._open(req, data)\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py\", line 542, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py\", line 502, in _call_chain\n    result = func(*args)\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py\", line 1360, in https_open\n    return self.do_open(http.client.HTTPSConnection, req,\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\urllib\\request.py\", line 1321, in do_open\n    r = h.getresponse()\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 1322, in getresponse\n    response.begin()\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 303, in begin\n    version, status, reason = self._read_status()\n  File \"C:\\Users\\Vidya raj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 272, in _read_status\n    raise RemoteDisconnected(\"Remote end closed connection without\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"labels":[{"name":"tag","value":"scenario"},{"name":"suite","value":"test_PricingPage"},{"name":"subSuite","value":"TestPricingPage"},{"name":"host","value":"VidyaR-LAP"},{"name":"thread","value":"1940-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_PricingPage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario"]},"source":"222600cb603de559.json","parameterValues":[]}